/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2021-04-01 09:06:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/./main.jsp", Long.valueOf(1616731534766L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <!-- Required meta tags -->\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap CSS -->\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6\" crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- Optional JavaScript; choose one of the two! -->\r\n");
      out.write("\r\n");
      out.write("    <!-- Option 1: Bootstrap Bundle with Popper -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Option 2: Separate Popper and Bootstrap JS -->\r\n");
      out.write("    <!--\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js\" integrity=\"sha384-SR1sx49pcuLnqZUnnPwx6FCym0wLsk5JZuNx2bPPENzswTNFaQU1RDvt3wT4gWFG\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.min.js\" integrity=\"sha384-j0CNLUeiqtyaRmlzUHCPZ+Gy5fQu0dQ6eZ/xAww941Ai1SxSY+0EQqNXNE6DZiVc\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    -->\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>add Details</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function validateform()\r\n");
      out.write("{\r\n");
      out.write("\twindow.alert(\"hiii\");\r\n");
      out.write("\r\n");
      out.write("\tvar firstpassword=document.myForm.password.value;  \r\n");
      out.write("\tvar secondpassword=document.myForm.confirmPassword.value;  \r\n");
      out.write("\t  \r\n");
      out.write("\tif(firstpassword==secondpassword){  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\treturn true;  \r\n");
      out.write("\t}  \r\n");
      out.write("\telse{  \r\n");
      out.write("\talert(\"password must be same!\");  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\treturn false;  \r\n");
      out.write("\t}  \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container mt-1\">\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"row col-md-6 offset-md-3 container text-center\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<h1 class=\"text-center mb-3 ml-3\">Fill Details</h1>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<form action=\"formHandle\" name=\"myForm\" method=\"post\"\r\n");
      out.write("\t\t\t\tonsubmit=\"return validateform();\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"form-group mt-0\">\r\n");
      out.write("\t\t\t\t\t<label for=\"firstName\">First Name</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" id=\"firstName\" name=\"firstName\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Enter First Name\" autocomplete=\"off\"\r\n");
      out.write("\t\t\t\t\t\t> <span id=\"firstNameError\"></span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"form-group mb-0\">\r\n");
      out.write("\t\t\t\t\t<label for=\"lastName\">Last Name</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" id=\"lastName\" name=\"lastName\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Enter Last Name\" autocomplete=\"off\"\r\n");
      out.write("\t\t\t\t\t\t> <span id=\"lastNameError\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"display: none\"></span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"fatherName\">Father Name</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" id=\"fatherName\" name=\"fatherName\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Enter Father Name\" autocomplete=\"off\"\r\n");
      out.write("\t\t\t\t\t\t> <span id=\"fatherNameError\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"display: none\"></span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"age\">Age</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" id=\"age\" name=\"age\" autocomplete=\"off\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Enter Age\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"address\">Address</label>\r\n");
      out.write("\t\t\t\t\t<textarea rows=\"3\" type=\"text\" class=\"form-control\" id=\"address\"\r\n");
      out.write("\t\t\t\t\t\tname=\"address\" placeholder=\"Enter Address\"></textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"email\">Email</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" id=\"email\" name=\"email\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Enter Email\" autocomplete=\"off\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"password\">Password</label> <input type=\"password\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" id=\"password\" name=\"password\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Enter Password\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"confirmPassword\">Confirm Password</label> <input\r\n");
      out.write("\t\t\t\t\t\ttype=\"password\" class=\"form-control\" id=\"confirmPassword\"\r\n");
      out.write("\t\t\t\t\t\tname=\"confirmPassword\" placeholder=\"Enter Confirm Password\"\r\n");
      out.write("\t\t\t\t\t\t>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"success\" class=\"btn btn-primary mt-3\">Show Details</a>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<button type=\"submit\" class=\"btn btn-primary mt-3\">Submit</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
